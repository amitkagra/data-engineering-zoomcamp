1. docker-compose up

2. Create table yellow_taxi_trips: URL="https://github.com/DataTalksClub/nyc-tlc-data/releases/download/yellow/yellow_tripdata_2021-01.csv.gz"

python ingest_zone_data.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5432 \
  --db=ny_taxi \
  --table_name=yellow_taxi_trips \
  --url=${URL} 

3. Create table green_taxi_trips: URL="https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-10.csv.gz"

python ingest_green_data.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5432 \
  --db=ny_taxi \
  --table_name=green_taxi_trips 

4. Create table zone: 
URL="https://github.com/DataTalksClub/nyc-tlc-data/releases/tag/misc/taxi_zone_lookup.csv"

python ingest_zone_data.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5432 \
  --db=ny_taxi \
  --table_name=zone
  

5. Open link http://localhost:8080/
Register server pgdatabase/root/root/5432

6. Trip Segmentation Count:
SELECT 
    CASE
		WHEN trip_distance <= 1 THEN 'Range 1'
        WHEN trip_distance >1 AND trip_distance <=3 THEN 'Range 3'
        WHEN trip_distance >3 AND trip_distance <=7 THEN 'Range 7'
		WHEN trip_distance >7 AND trip_distance <=10 THEN 'Range 10'
        ELSE 'Over 10'
    END AS ranges,
    COUNT(*) AS trip_count
FROM public."green_taxi_trips"
WHERE DATE(lpep_pickup_datetime) >= '2019-10-1' 
AND DATE(lpep_dropoff_datetime) < '2019-11-1' 
GROUP BY ranges;

Result:
"Range 1"	104802
"Range 3"	198924
"Range 7"	109603
"Range 10"	27678
"Over 10"	35189

7. Longest trip for each day:
SELECT lpep_pickup_datetime,trip_distance
FROM public."green_taxi_trips"
ORDER BY trip_distance DESC
LIMIT 1;

Result:
"2019-10-31 23:23:41"	515.89

8. Three biggest pickup zones:
SELECT z."Zone", SUM(public."green_taxi_trips".total_amount) AS total_sum
FROM public."green_taxi_trips"
INNER JOIN zone z
ON public."green_taxi_trips"."PULocationID" = z."LocationID"
WHERE DATE(public."green_taxi_trips".lpep_pickup_datetime) = '2019-10-18'
AND z."Borough" != 'Unknown'
GROUP BY z."Zone"
HAVING SUM(public."green_taxi_trips".total_amount) > 13000
ORDER BY total_sum DESC
LIMIT 3;

Result:
"East Harlem North"	18686.679999999917
"East Harlem South"	16797.260000000006
"Morningside Heights"	13029.790000000037

9. Largest tip:
SELECT z2."Zone", max(tip_amount) as Max_tip
FROM public."green_taxi_trips"
INNER JOIN zone z2
ON public."green_taxi_trips"."DOLocationID" = z2."LocationID"
INNER JOIN zone z1
ON public."green_taxi_trips"."PULocationID" = z1."LocationID"
WHERE z1."Zone" = 'East Harlem North'
GROUP BY z2."Zone"
ORDER BY Max_tip DESC
LIMIT 1;

Result:
"JFK Airport"	87.3
